name: .NET Build, Test, Pack, and Publish

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

env:
  NETCORE_VERSION: '8.0.x'
  GIT_REPO_ROOT: src
  MAJOR_MINOR_VERSION: 1.0.
  SOLUTION_FILE: Agoda.NUnit.KestrelLogging.sln

jobs:
  build:
    name: Build, Test, Pack
    runs-on: windows-latest

    steps:
    - uses: actions/checkout@v4

    - name: Setup .NET SDK ${{ env.NETCORE_VERSION }}
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: ${{ env.NETCORE_VERSION }}

    - name: Restore
      working-directory: ${{ env.GIT_REPO_ROOT }}
      run: dotnet restore ${{ env.SOLUTION_FILE }}

    - name: Add MSBuild to PATH
      uses: microsoft/setup-msbuild@v2

    - name: Build
      working-directory: ${{ env.GIT_REPO_ROOT }}
      run: dotnet build ${{ env.SOLUTION_FILE }} --configuration Debug --no-restore

    - name: Test with coverage (collect Cobertura)
      working-directory: ${{ env.GIT_REPO_ROOT }}
      run: >
        dotnet test ${{ env.SOLUTION_FILE }}
        --no-build
        --configuration Debug
        /p:CollectCoverage=true
        /p:CoverletOutputFormat=cobertura
        /p:CoverletOutput=../TestResults/coverage
        /p:ExcludeByFile="**/bin/**,**/obj/**"

    - name: Upload coverage artifact
      uses: actions/upload-artifact@v4
      with:
        name: coverage
        path: TestResults/*.xml
        if-no-files-found: warn

    - name: Pack
      working-directory: ${{ env.GIT_REPO_ROOT }}
      run: dotnet pack Agoda.NUnit.KestrelLogging/Agoda.NUnit.KestrelLogging.csproj --configuration Debug -o finalpackage -p:PackageVersion=${{ env.MAJOR_MINOR_VERSION }}${{ github.run_number }}

    - name: Publish nupkg artifact
      uses: actions/upload-artifact@v4
      with:
        name: nupkg
        path: ${{ env.GIT_REPO_ROOT }}/finalpackage/*.nupkg

    - name: Upload coverage to Codecov
      if: always()
      uses: codecov/codecov-action@v4
      with:
        token: ${{ secrets.CODECOV_TOKEN }}
        files: src/TestResults/coverage.cobertura.xml
        fail_ci_if_error: true

  deploy:
    needs: build
    if: github.ref == 'refs/heads/main'
    name: Deploy Packages
    runs-on: ubuntu-latest
    steps:
      - name: Download Package artifact
        uses: actions/download-artifact@v4
        with:
          name: nupkg
          path: ./nupkg

      - name: Setup .NET SDK
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: ${{ env.NETCORE_VERSION }}

      - name: Push to NuGet
        run: dotnet nuget push nupkg/**/*.nupkg -k ${{ secrets.NUGET_API_KEY }} -s https://api.nuget.org/v3/index.json --skip-duplicate
